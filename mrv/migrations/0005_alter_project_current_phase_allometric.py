# Generated by Django 5.2.4 on 2025-09-05 12:28

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('mrv', '0004_delete_projectdataimport'),
    ]

    operations = [
        migrations.AlterField(
            model_name='project',
            name='current_phase',
            field=models.IntegerField(choices=[(1, 'Phase 1 - Data Selection & Validation'), (2, 'Phase 2 - Height-Diameter Modelling'), (3, 'Phase 3 - Volume Ratio Calculation'), (4, 'Phase 4 - Carbon Emission Calculation')], default=1),
        ),
        migrations.CreateModel(
            name='Allometric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('density', models.FloatField(help_text='Wood density (g/cmÂ³)')),
                ('stem_a', models.FloatField(help_text="Stem allometric parameter 'a'")),
                ('stem_b', models.FloatField(help_text="Stem allometric parameter 'b'")),
                ('stem_c', models.FloatField(blank=True, help_text="Stem allometric parameter 'c' (optional)", null=True)),
                ('top_10_a', models.FloatField(help_text="Top 10% allometric parameter 'a'")),
                ('top_10_b', models.FloatField(help_text="Top 10% allometric parameter 'b'")),
                ('top_20_a', models.FloatField(help_text="Top 20% allometric parameter 'a'")),
                ('top_20_b', models.FloatField(help_text="Top 20% allometric parameter 'b'")),
                ('bark_stem_a', models.FloatField(help_text="Bark stem allometric parameter 'a'")),
                ('bark_stem_b', models.FloatField(help_text="Bark stem allometric parameter 'b'")),
                ('bark_top_10_a', models.FloatField(help_text="Bark top 10% allometric parameter 'a'")),
                ('bark_top_10_b', models.FloatField(help_text="Bark top 10% allometric parameter 'b'")),
                ('bark_top_20_a', models.FloatField(help_text="Bark top 20% allometric parameter 'a'")),
                ('bark_top_20_b', models.FloatField(help_text="Bark top 20% allometric parameter 'b'")),
                ('branch_s', models.FloatField(help_text='Small branch allometric parameter')),
                ('branch_m', models.FloatField(help_text='Medium branch allometric parameter')),
                ('branch_l', models.FloatField(help_text='Large branch allometric parameter')),
                ('foliage_s', models.FloatField(help_text='Small foliage allometric parameter')),
                ('foliage_m', models.FloatField(help_text='Medium foliage allometric parameter')),
                ('foliage_l', models.FloatField(help_text='Large foliage allometric parameter')),
                ('species', models.ForeignKey(db_column='species_code', help_text='Species code from forest_species table', on_delete=django.db.models.deletion.CASCADE, to='mrv.forestspecies', to_field='code')),
            ],
            options={
                'verbose_name': 'Allometric Equation',
                'verbose_name_plural': 'Allometric Equations',
                'db_table': 'allometric',
                'unique_together': {('species',)},
            },
        ),
    ]
